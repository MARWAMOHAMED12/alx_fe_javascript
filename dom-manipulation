// بيانات الاقتباسات
let quotes = [
  { text: "Be yourself; everyone else is already taken.", category: "Inspiration" },
  { text: "So many books, so little time.", category: "Books" },
  { text: "No one can make you feel inferior without your consent.", category: "Motivation" }
];

// عرض اقتباس عشوائي
function showRandomQuote() {
  const randomIndex = Math.floor(Math.random() * quotes.length);
  const quote = quotes[randomIndex];
  document.getElementById("quoteDisplay").innerText = `"${quote.text}" - ${quote.category}`;
}

// ربط الزرار بالوظيفة
document.getElementById("newQuote").addEventListener("click", showRandomQuote);

// إضافة اقتباس جديد
function addQuote() {
  const text = document.getElementById("newQuoteText").value;
  const category = document.getElementById("newQuoteCategory").value;

  if (text && category) {
    quotes.push({ text, category });
    document.getElementById("newQuoteText").value = "";
    document.getElementById("newQuoteCategory").value = "";
    alert("Quote added!");
  } else {
    alert("Please fill both fields.");
  }
}
if (!Array.isArray(quotes) || !quotes.every(q => q.text && q.category)) {
    throw new Error("Quotes array with text and category properties is missing or malformed.");
}

if (typeof showRandomQuote !== "function") {
    throw new Error("showRandomQuote function is missing.");
}

if (!quotes.length || typeof quotes[0].text === "undefined" || typeof quotes[0].category === "undefined") {
    throw new Error("Quotes array does not contain valid objects.");
}

if (!document.getElementById("quoteDisplay")) {
    throw new Error("Element with id 'quoteDisplay' is missing in the DOM.");
}

if (typeof addQuote !== "function") {
    throw new Error("addQuote function is missing.");
}

if (!document.getElementById("newQuote")) {
    throw new Error("Button with id 'newQuote' is missing in the DOM.");
}

const showNewQuoteListeners = getEventListeners(document.getElementById("newQuote")).click || [];
const hasShowRandomQuoteListener = showNewQuoteListeners.some(listener => listener.listener === showRandomQuote);

if (!hasShowRandomQuoteListener) {
    throw new Error("Event listener for 'Show New Quote' button is missing.");
}
